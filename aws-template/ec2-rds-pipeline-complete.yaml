AWSTemplateFormatVersion: 2010-09-09
Description: Template for rds and ec2 instances

Parameters:
  MyIp:
    Description: Please enter your public ip adress
    Type: String
    Default: 154.56.88.88/32
  MyKeyName:
    Description: Please enter one of your keyname
    Type: String
    Default: pcourt-01
  AmiId:
    Description: Please enter a ami id
    Type: String
    Default: ami-04dd4500af104442f
  GithubUser:
    Description: github username 
    Type: String
    Default: Piercuta
  GitRepo:
    Description: github repo
    Type: String
    Default: ChoixRestoHtmlCss
  BranchRepo:
    Description: github branch repo
    Type: String
    Default: deploy-test
  Token:
    Description: github token access
    Type: String

Resources:
  
  # RDS

  RDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: rds-mysql-db
      GroupDescription: SecurityGroup for RDS instance.
      SecurityGroupIngress:
        - SourceSecurityGroupId: !GetAtt EC2SecurityGroup.GroupId 
          FromPort: '3306'
          ToPort: '3306'
          IpProtocol: tcp
        - CidrIp: !Ref MyIp
          IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'

  RDSInstance:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Delete
    Properties:
      MasterUserPassword: Coucou123!
      DBInstanceClass: db.t2.micro
      VPCSecurityGroups:
        - !GetAtt RDSSecurityGroup.GroupId
      MasterUsername: admin
      DBInstanceIdentifier: db-rds-mysql
      MultiAZ: false
      PubliclyAccessible: true
      Engine: mysql
      AllocatedStorage: 5
  
  # EC2
 
  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: ec2-instance-sg
      GroupDescription: SecurityGroup for EC2 instance.
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: '22'
          ToPort: '22'
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: '5000'
          ToPort: '5000'
          IpProtocol: tcp
    
  EC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref EC2InstanceRole

  EC2InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName:  EC2RoleForSSM
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM'
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
      Path: /
      
  EC2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      InstanceType: t2.micro
      ImageId: !Ref AmiId
      KeyName: !Ref MyKeyName
      IamInstanceProfile: !Ref EC2InstanceProfile
      SecurityGroups: 
        - !Ref EC2SecurityGroup
      Tags: 
        - Key: Name
          Value: ec2-cf-instance
        - Key: deploy
          Value: dotnet
      UserData:
          Fn::Base64: !Sub |
             #!/bin/bash -xe
             echo "START user data instructions"
             
             yum install -y ruby
             cd /home/ec2-user/
             wget 'https://aws-codedeploy-eu-west-1.s3.eu-west-1.amazonaws.com/latest/install'
             chmod +x ./install
             sudo ./install auto
             
             cd  /tmp/
             curl https://download.visualstudio.microsoft.com/download/pr/3c98126b-50f5-4497-8ffd-18d17a3f6b95/044d0f20256fd9bf2971f8da9a0364e4/dotnet-sdk-3.1.416-linux-x64.tar.gz --output dotnet-sdk-3.1.416-linux-x64.tar.gz
             DOTNET_FILE=dotnet-sdk-3.1.416-linux-x64.tar.gz
             export DOTNET_ROOT=/tmp/dotnet
             mkdir -p "$DOTNET_ROOT" && tar zxf "$DOTNET_FILE" -C "$DOTNET_ROOT"

             echo "END user data instructions"

  # CICD

  DeployApplication:
    Type: 'AWS::CodeDeploy::Application'
    Properties:
      ApplicationName: code-deploy-app
      ComputePlatform: Server
          
  DeploymentGroup:
    Type: 'AWS::CodeDeploy::DeploymentGroup'
    Properties:
      ApplicationName: !Ref DeployApplication
      Ec2TagFilters:
        - Key: deploy
          Type: KEY_AND_VALUE
          Value: dotnet
      ServiceRoleArn: !GetAtt 
        - CodeDeployDGRole
        - Arn
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - DEPLOYMENT_FAILURE

  CodeDeployDGRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName:  code-deploy-dotnet-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
      Path: /

  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName:  code-build-dotnet-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
      Path: /

  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: code-build-dotnet-project
      Description: A description about my project
      LogsConfig:
        CloudWatchLogs: 
          Status: DISABLED 
      ServiceRole: !GetAtt 
        - CodeBuildRole
        - Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        EnvironmentVariables:
          - Name: CS
            Type: PLAINTEXT
            Value: !Join 
              - ''
              - - server=
                - !GetAtt 
                  - RDSInstance
                  - Endpoint.Address
                - ;user id=admin
                - ;password=Coucou123!
                - ;database=ChoixResto
      Source:
        Type: CODEPIPELINE

  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName:  code-pipeline-dotnet-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
      Path: /

  ArtifactBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      VersioningConfiguration:
        Status: Enabled

  Secret:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: 'Token for accessing github repo'
      Name: github_token
      SecretString: 
        !Sub
          - '{"github_access_token": "${token}"}'
          - {token: !Ref Token } 

  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    DependsOn:
      - Secret
      - RDSInstance
    Properties:
      Name: code-pipeline-dotnet
      ArtifactStore:
        Location: !Ref ArtifactBucket
        Type: S3
      RoleArn: !GetAtt 
        - CodePipelineRole
        - Arn
      RestartExecutionOnUpdate: true
      Stages:
        - Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                Owner: !Ref GithubUser
                Repo: !Ref GitRepo
                Branch: !Ref BranchRepo
                OAuthToken: '{{resolve:secretsmanager:github_token:SecretString:github_access_token}}'
                PollForSourceChanges: true
              RunOrder: 1
            - Name: Build
              Actions:
                - Name: BuildAction
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Version: '1'
                    Provider: CodeBuild
                  InputArtifacts:
                    - Name: SourceArtifact
                  OutputArtifacts:
                    - Name: BuildArtifact
                  Configuration:
                    ProjectName: !Ref CodeBuild
                  RunOrder: 1
            - Name: Deploy
              Actions:
                - Name: DeployAction
                  InputArtifacts:
                    - Name: BuildArtifact
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Version: '1'
                    Provider: CodeDeploy
                  Configuration:
                    ApplicationName: !Ref DeployApplication
                    DeploymentGroupName: !Ref DeploymentGroup
                  RunOrder: 1

Outputs: {}
